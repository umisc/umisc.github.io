{"version":3,"sources":["webpack:///./src/pages/events.js"],"names":["before_today","d","today","Date","targ","prev_year","getFullYear","prev_month","getMonth","prev_day","getDate","EventsPageItem","path","fluid","image","childImageSharp","title","date","eventType","className","key","to","pageQuery","EventsPage","events","data","allMarkdownRemark","edges","past_events","filter","e","node","frontmatter","curr_events","length","map"],"mappings":"qHAAA,mIAgEMA,GAhEN,UAgEqB,SAACC,GACpB,IAAIC,EAAQ,IAAIC,KACZC,EAAO,IAAID,KAAKF,GAChBI,EAAYD,EAAKE,cAAgBJ,EAAMI,cACvCC,EACFH,EAAKE,eAAiBJ,EAAMI,eAC5BF,EAAKI,WAAaN,EAAMM,WACtBC,EACFL,EAAKE,eAAiBJ,EAAMI,eAC5BF,EAAKI,YAAcN,EAAMM,YACzBJ,EAAKM,UAAYR,EAAMQ,UACzB,OAAOL,GAAaE,GAAcE,IAG9BE,EAAiB,SAAC,GAQjB,IAPLC,EAOI,EAPJA,KAEqBC,EAKjB,EANJC,MACEC,gBAAmBF,MAErBG,EAGI,EAHJA,MACAC,EAEI,EAFJA,KAEI,EADJC,UAEA,OACE,yBAAKC,UAAU,mBAAmBC,IAAKR,GACrC,kBAAC,OAAD,CAAMS,GAAIT,GACR,yBAAKO,UAAU,mBACb,kBAAC,IAAD,CAAKN,MAAOA,KAEd,yBAAKM,UAAU,QACb,0BAAMA,UAAU,SAASH,GACzB,6BACA,0BAAMG,UAAU,WAAWF,OAOxBK,EAAS,aA2BPC,UA1HI,SAAC,GAAc,IACjBC,EADgB,EAAXC,KACWC,kBAAvBC,MAEFC,EAAcJ,EAAOK,QAAO,gBAASC,EAAT,EAAGC,KAAH,OAChC/B,EAAa8B,EAAEE,YAAYf,SAEvBgB,EAAcT,EAAOK,QACzB,gBAASC,EAAT,EAAGC,KAAH,OAAkB/B,EAAa8B,EAAEE,YAAYf,SAE/C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKD,MAAM,WACX,yBAAKG,UAAU,yBACb,+CACuB,GAAtBc,EAAYC,OACX,yBAAKf,UAAU,aAAf,+CAIA,yBAAKA,UAAU,0BACZc,EAAYE,KAAI,gBAASL,EAAT,EAAGC,KAAH,OAAiBpB,EAAemB,EAAEE,iBAGvD,2CACA,wBAAIb,UAAU,qBAAd,kBACA,yBAAKA,UAAU,0BACZS,EAAYO,KAAI,YAAkB,IAATL,EAAQ,EAAdC,KAClB,MAC8B,mBAA5BD,EAAEE,YAAYd,WACdP,EAAemB,EAAEE,iBAIvB,wBAAIb,UAAU,qBAAd,gBACA,yBAAKA,UAAU,0BACZS,EAAYO,KAAI,YAAkB,IAATL,EAAQ,EAAdC,KAClB,MAC8B,iBAA5BD,EAAEE,YAAYd,WACdP,EAAemB,EAAEE,iBAIvB,wBAAIb,UAAU,qBAAd,aACA,yBAAKA,UAAU,0BACZS,EAAYO,KAAI,YAAkB,IAATL,EAAQ,EAAdC,KAClB,MAC8B,aAA5BD,EAAEE,YAAYd,WACdP,EAAemB,EAAEE","file":"component---src-pages-events-js-9b44c59a97da1b849a2c.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport \"../styles/events.sass\";\n\nconst EventsPage = ({ data }) => {\n  const { edges: events } = data.allMarkdownRemark;\n  const categories = [\"Workshops\", \"Guest Events\", \"Special Events\"];\n  const past_events = events.filter(({ node: e }) =>\n    before_today(e.frontmatter.date)\n  );\n  const curr_events = events.filter(\n    ({ node: e }) => !before_today(e.frontmatter.date)\n  );\n  return (\n    <Layout>\n      <SEO title=\"Events\" />\n      <div className=\"events-page-container\">\n        <h1>Upcoming Events</h1>\n        {curr_events.length == 0 ? (\n          <div className=\"no-events\">\n            Nothing yet... Check back later this month!\n          </div>\n        ) : (\n          <div className=\"events-items-container\">\n            {curr_events.map(({ node: e }) => EventsPageItem(e.frontmatter))}\n          </div>\n        )}\n        <h1>Past Events</h1>\n        <h2 className=\"events-subheading\">Special Events</h2>\n        <div className=\"events-items-container\">\n          {past_events.map(({ node: e }) => {\n            return (\n              e.frontmatter.eventType === \"Special events\" &&\n              EventsPageItem(e.frontmatter)\n            );\n          })}\n        </div>\n        <h2 className=\"events-subheading\">Guest Events</h2>\n        <div className=\"events-items-container\">\n          {past_events.map(({ node: e }) => {\n            return (\n              e.frontmatter.eventType === \"Guest Events\" &&\n              EventsPageItem(e.frontmatter)\n            );\n          })}\n        </div>\n        <h2 className=\"events-subheading\">Workshops</h2>\n        <div className=\"events-items-container\">\n          {past_events.map(({ node: e }) => {\n            return (\n              e.frontmatter.eventType === \"Workshop\" &&\n              EventsPageItem(e.frontmatter)\n            );\n          })}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nconst before_today = (d) => {\n  var today = new Date();\n  var targ = new Date(d);\n  var prev_year = targ.getFullYear() < today.getFullYear();\n  var prev_month =\n    targ.getFullYear() == today.getFullYear() &&\n    targ.getMonth() < today.getMonth();\n  var prev_day =\n    targ.getFullYear() == today.getFullYear() &&\n    targ.getMonth() == today.getMonth() &&\n    targ.getDate() < today.getDate();\n  return prev_year || prev_month || prev_day;\n};\n\nconst EventsPageItem = ({\n  path,\n  image: {\n    childImageSharp: { fluid },\n  },\n  title,\n  date,\n  eventType,\n}) => {\n  return (\n    <div className=\"events-page-item\" key={path}>\n      <Link to={path}>\n        <div className=\"image-container\">\n          <Img fluid={fluid} />\n        </div>\n        <div className=\"text\">\n          <span className=\"title\">{title}</span>\n          <br />\n          <span className=\"details\">{date}</span>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport const pageQuery = graphql`\n  query EventsQuery {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/events/\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            eventType\n            image {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default EventsPage;\n"],"sourceRoot":""}